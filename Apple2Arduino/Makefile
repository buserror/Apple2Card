# Makefile - build "Arduino" firmware image.
#
#  Copyright (c) 2023 Thorsten C. Brehm
#
#  This software is provided 'as-is', without any express or implied
#  warranty. In no event will the authors be held liable for any damages
#  arising from the use of this software.
#
#  Permission is granted to anyone to use this software for any purpose,
#  including commercial applications, and to alter it and redistribute it
#  freely, subject to the following restrictions:
#
#  1. The origin of this software must not be misrepresented; you must not
#     claim that you wrote the original software. If you use this software
#     in a product, an acknowledgment in the product documentation would be
#     appreciated but is not required.
#  2. Altered source versions must be plainly marked as such, and must not be
#     misrepresented as being the original software.
#  3. This notice may not be removed or altered from any source distribution.

include ../version.mk

SOURCES		:= $(wildcard *.ino *.c *.cpp *.h)

PLATFORM_PATH	:= $(realpath .)
BUILD_PROPERTIES := --build-property "runtime.platform.path=$(PLATFORM_PATH)"

# Allow verbose make using $ make V=1
ifeq ($(V),1)
Q 		:=
else
Q 		:= @
endif

# Bootloaders are located at:
# https://github.com/ThorstenBr/MiniCoreDAN2Controller.git
# X4=1
ifeq ($(X4),)
DSTDIR		:= bin-328p
BOARD		:= arduino:avr:uno
HEX_FILE	:= Apple2Arduino.ino.with_bootloader.hex
# Override default Arduino Uno settings and provide a custom bootloader
# (must be stored in a "bootloaders" subdirectory, since that's hardcoded in the Arduino environment)
BOOTLOADER	:= optiboot_atmega328p_DANII_16000000L.hex
BUILD_PROPERTIES += --build-property "bootloader.file=$(BOOTLOADER)"
else
# this requires external 'core' libraries for the Atmega644
# wget http://www.leonardomiliani.com/repository/package_leonardomiliani.com_index.json
# mv package_leonardomiliani.com_index.json ~/.arduino15/
# arduino-cli --additional-urls package_leonardomiliani.com_index.json core install megax4:avr
DSTDIR		:= bin-644p
HEX_FILE	:= Apple2Arduino.ino.644.with_bootloader.hex
BOARD		:= megax4:avr:atmegax4:cpu=644_16b

# cd MiniCoreDAN2Controller/avr/bootloaders/optiboot_flash
# make atmega644p AVR_FREQ=16000000L DANII=1 GCCROOT=
BOOTLOADER	:= optiboot_flash_atmega644p_UART_DANII_16000000L_NOLED.hex
BUILD_PROPERTIES += --build-property "bootloader.file=$(BOOTLOADER)"
endif

# set localisation to default, so arduino-cli log output does not depend on system language, but is always in english
export LC_ALL:=C

.PHONY: all build

all: build

build: $(HEX_FILE)

fwversion.h: ../version.mk
	@(echo "// AUTOGENERATED FILE"; echo "#define FW_VERSION \"$(FW_VERSION)\"") > $@

# build and add custom bootloader
$(HEX_FILE): $(SOURCES) fwversion.h bootloaders/$(BOOTLOADER) | $(DSTDIR)
	$(Q)arduino-cli compile -b $(BOARD) $(BUILD_PROPERTIES) \
		--clean --output-dir $(DSTDIR) Apple2Arduino.ino > $(DSTDIR)/build.log || \
		echo Compilation failed. You need at least $$ arduino-cli core install arduino:avr \
			and $$ arduino-cli lib install Ethernet
	$(Q)cat $(DSTDIR)/build.log
	$(Q)cp $(DSTDIR)/Apple2Arduino.ino.with_bootloader.hex $@

clean:
	$(Q)rm -f $(DSTDIR)/*.eep $(DSTDIR)/*.elf $(DSTDIR)/*.hex $(DSTDIR)/*.bin fwversion.h $(HEX_FILE)

$(DSTDIR):
	$(Q)mkdir -p $(DSTDIR)
